@startuml Sequence diagram classify food

actor User
participant Demo
participant Food_recognition

User -> Demo ++ : image
Demo -> MeatballDetect ** : init(0)
Demo -> PastaDetect ** : init(1)
Demo -> BeanDetect ** : init(2)
Demo -> Pan ** : Pan(image)
Demo -> Pan ++ : getMasked()
Pan -> Circle ** : Circle(x, y, r)
return panImage
Demo -> Food_recognition ++ : recognize(panImage)
Food_recognition -> MeatballDetect ++ : findFood(panImage, minH, minS, minV, maxH, maxS, maxV, blurVal)
alt circles is not None
    loop i in circles
        MeatballDetect -> MeatballDetect ++ : meatballCrop(maskedMeatballs, x, y, r)
        return out, x, y, r
        MeatballDetect -> Food ** : (meatballImage, x, y, r, r)
    end
end
return meatballs
Food_recognition -> PastaDetect ++ : findFood(panImage, minH, minS, minV, maxH, maxS, maxV, blurVal)
PastaDetect -> PastaDetect ++ : maskImage(image)
return maskedImage
loop i in contours
    alt maxSize > contourArea > minsize 
        PastaDetect -> PastaDetect ++ : correctFood(contours, cnt, i)
    end
end
return foodList
return pasta
Food_recognition -> BeanDetect ++ : findFood(panImage, minH, minS, minV, maxH, maxS, maxV, blurVal)
BeanDetect -> BeanDetect ++ : maskImage(image)
return maskedImage
loop i in contours
    alt maxSize > contourArea > minsize 
        BeanDetect -> BeanDetect ++ : correctFood(contours, cnt, i)
    end
end
return foodList
return beans

Food_recognition -> FishStickDetect ++ : findFood(panImage, minH, minS, minV, maxH, maxS, maxV, blurVal)
FishStickDetect -> FishStickDetect ++ : maskImage(image)
return maskedImage
loop i in contours
    alt maxSize > contourArea > minsize 
        FishStickDetect -> FishStickDetect ++ : correctFood(contours, cnt, i)
    end
end
return foodList
return fishSticks

Food_recognition -> PotatoDetect ++ : findFood(panImage, minH, minS, minV, maxH, maxS, maxV, blurVal)
PotatoDetect -> PotatoDetect ++ : maskImage(image)
return maskedImage
loop i in contours
    alt maxSize > contourArea > minsize 
        PotatoDetect -> PotatoDetect ++ : correctFood(contours, cnt, i)
    end
end
return foodList
return potatoes

Food_recognition -> CarrotDetect ++ : findFood(panImage, minH, minS, minV, maxH, maxS, maxV, blurVal)
CarrotDetect -> CarrotDetect ++ : maskImage(image)
return maskedImage
loop i in contours
    alt maxSize > contourArea > minsize 
        CarrotDetect -> CarrotDetect ++ : correctFood(contours, cnt, i)
    end
end
return foodList
return carrots

return foods

alt foods != 0:
    loop food in Foods:
        Demo -> Food ++ : getArea()
        return area
        Demo -> Food ++ : getPerimeter()
        return perimeter
        Demo -> Food ++ : getProminentHue()
        return prominentHue
        Demo -> Food ++ : getShape()
        return shape
    end
end

return output





@enduml